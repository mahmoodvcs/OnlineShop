//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PayamSMSV2Service
{
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="urn:SMSAPIwsdl", ConfigurationName="PayamSMSV2Service.SMSAPIPortType")]
    public interface SMSAPIPortType
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:SMSAPIwsdl#Send", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DeliveryResult))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ReceiveResult))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(SendResult))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MultipleSendResult))]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        System.Threading.Tasks.Task<PayamSMSV2Service.MultipleSendResult[]> SendMultipleAsync(string organization, string username, string password, string[] srcNumbers, string[] bodys, string[] destNos, long[] checkingMessageIds);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:SMSAPIwsdl#Send", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DeliveryResult))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ReceiveResult))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(SendResult))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MultipleSendResult))]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        System.Threading.Tasks.Task<PayamSMSV2Service.SendResult[]> SendAsync(string organization, string username, string password, string srcNumber, string body, string[] destNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:SMSAPIwsdl#ViewReceive", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DeliveryResult))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ReceiveResult))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(SendResult))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MultipleSendResult))]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        System.Threading.Tasks.Task<PayamSMSV2Service.ReceiveResult[]> ViewReceiveAsync(string organization, string username, string password, string number, string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:SMSAPIwsdl#getStatuses", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DeliveryResult))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ReceiveResult))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(SendResult))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MultipleSendResult))]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        System.Threading.Tasks.Task<PayamSMSV2Service.DeliveryResult[]> getStatusesAsync(string organization, string username, string password, long[] checkingIds);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:SMSAPIwsdl#Acknowledge", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DeliveryResult))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ReceiveResult))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(SendResult))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MultipleSendResult))]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        System.Threading.Tasks.Task<string[]> AcknowledgeAsync(string organization, string username, string password, long[] checkingIds);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:SMSAPIwsdl#getStatuses", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DeliveryResult))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ReceiveResult))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(SendResult))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MultipleSendResult))]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        System.Threading.Tasks.Task<PayamSMSV2Service.DeliveryResult[]> getStatuses_OriginalIDAsync(string organization, string username, string password, long[] Ids);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:SMSAPIwsdl#return account balance", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(DeliveryResult))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ReceiveResult))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(SendResult))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MultipleSendResult))]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        System.Threading.Tasks.Task<string> BalanceAsync(string organization, string username, string password);
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:SMSAPIwsdl")]
    public partial class MultipleSendResult
    {
        
        private string idField;
        
        /// <remarks/>
        public string ID
        {
            get
            {
                return this.idField;
            }
            set
            {
                this.idField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:SMSAPIwsdl")]
    public partial class DeliveryResult
    {
        
        private string idField;
        
        private string checkIDField;
        
        private string statusField;
        
        /// <remarks/>
        public string ID
        {
            get
            {
                return this.idField;
            }
            set
            {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string CheckID
        {
            get
            {
                return this.checkIDField;
            }
            set
            {
                this.checkIDField = value;
            }
        }
        
        /// <remarks/>
        public string Status
        {
            get
            {
                return this.statusField;
            }
            set
            {
                this.statusField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:SMSAPIwsdl")]
    public partial class ReceiveResult
    {
        
        private string idField;
        
        private string fromField;
        
        private string toField;
        
        private string dateField;
        
        private string bodyField;
        
        /// <remarks/>
        public string ID
        {
            get
            {
                return this.idField;
            }
            set
            {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string From
        {
            get
            {
                return this.fromField;
            }
            set
            {
                this.fromField = value;
            }
        }
        
        /// <remarks/>
        public string To
        {
            get
            {
                return this.toField;
            }
            set
            {
                this.toField = value;
            }
        }
        
        /// <remarks/>
        public string Date
        {
            get
            {
                return this.dateField;
            }
            set
            {
                this.dateField = value;
            }
        }
        
        /// <remarks/>
        public string Body
        {
            get
            {
                return this.bodyField;
            }
            set
            {
                this.bodyField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:SMSAPIwsdl")]
    public partial class SendResult
    {
        
        private string idField;
        
        private string mobileField;
        
        /// <remarks/>
        public string ID
        {
            get
            {
                return this.idField;
            }
            set
            {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string Mobile
        {
            get
            {
                return this.mobileField;
            }
            set
            {
                this.mobileField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    public interface SMSAPIPortTypeChannel : PayamSMSV2Service.SMSAPIPortType, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    public partial class SMSAPIPortTypeClient : System.ServiceModel.ClientBase<PayamSMSV2Service.SMSAPIPortType>, PayamSMSV2Service.SMSAPIPortType
    {
        
        /// <summary>
        /// Implement this partial method to configure the service endpoint.
        /// </summary>
        /// <param name="serviceEndpoint">The endpoint to configure</param>
        /// <param name="clientCredentials">The client credentials</param>
        static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public SMSAPIPortTypeClient() : 
                base(SMSAPIPortTypeClient.GetDefaultBinding(), SMSAPIPortTypeClient.GetDefaultEndpointAddress())
        {
            this.Endpoint.Name = EndpointConfiguration.SMSAPIPort.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public SMSAPIPortTypeClient(EndpointConfiguration endpointConfiguration) : 
                base(SMSAPIPortTypeClient.GetBindingForEndpoint(endpointConfiguration), SMSAPIPortTypeClient.GetEndpointAddress(endpointConfiguration))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public SMSAPIPortTypeClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(SMSAPIPortTypeClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public SMSAPIPortTypeClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(SMSAPIPortTypeClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress)
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public SMSAPIPortTypeClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        public System.Threading.Tasks.Task<PayamSMSV2Service.MultipleSendResult[]> SendMultipleAsync(string organization, string username, string password, string[] srcNumbers, string[] bodys, string[] destNos, long[] checkingMessageIds)
        {
            return base.Channel.SendMultipleAsync(organization, username, password, srcNumbers, bodys, destNos, checkingMessageIds);
        }
        
        public System.Threading.Tasks.Task<PayamSMSV2Service.SendResult[]> SendAsync(string organization, string username, string password, string srcNumber, string body, string[] destNo)
        {
            return base.Channel.SendAsync(organization, username, password, srcNumber, body, destNo);
        }
        
        public System.Threading.Tasks.Task<PayamSMSV2Service.ReceiveResult[]> ViewReceiveAsync(string organization, string username, string password, string number, string id)
        {
            return base.Channel.ViewReceiveAsync(organization, username, password, number, id);
        }
        
        public System.Threading.Tasks.Task<PayamSMSV2Service.DeliveryResult[]> getStatusesAsync(string organization, string username, string password, long[] checkingIds)
        {
            return base.Channel.getStatusesAsync(organization, username, password, checkingIds);
        }
        
        public System.Threading.Tasks.Task<string[]> AcknowledgeAsync(string organization, string username, string password, long[] checkingIds)
        {
            return base.Channel.AcknowledgeAsync(organization, username, password, checkingIds);
        }
        
        public System.Threading.Tasks.Task<PayamSMSV2Service.DeliveryResult[]> getStatuses_OriginalIDAsync(string organization, string username, string password, long[] Ids)
        {
            return base.Channel.getStatuses_OriginalIDAsync(organization, username, password, Ids);
        }
        
        public System.Threading.Tasks.Task<string> BalanceAsync(string organization, string username, string password)
        {
            return base.Channel.BalanceAsync(organization, username, password);
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        public virtual System.Threading.Tasks.Task CloseAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginClose(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndClose));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.SMSAPIPort))
            {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                result.Security.Mode = System.ServiceModel.BasicHttpSecurityMode.Transport;
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.SMSAPIPort))
            {
                return new System.ServiceModel.EndpointAddress("https://new.payamsms.com/services/v2/index.php");
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.Channels.Binding GetDefaultBinding()
        {
            return SMSAPIPortTypeClient.GetBindingForEndpoint(EndpointConfiguration.SMSAPIPort);
        }
        
        private static System.ServiceModel.EndpointAddress GetDefaultEndpointAddress()
        {
            return SMSAPIPortTypeClient.GetEndpointAddress(EndpointConfiguration.SMSAPIPort);
        }
        
        public enum EndpointConfiguration
        {
            
            SMSAPIPort,
        }
    }
}
