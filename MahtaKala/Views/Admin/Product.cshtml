@model Product
@{
    ViewData["Title"] = ViewData["Title"];
    Layout = "~/Views/Shared/_Admin.cshtml";
}
<div class="card card-custom gutter-b example example-compact">
    @using (Html.BeginForm("Product", "admin", FormMethod.Post, new { enctype = "multipart/form-data", @class = "form" }))
    {
        @Html.AntiForgeryToken()
        @Html.HiddenFor(a => a.Id)


        <div class="card-header">
            <div class="row">
                <div class="col-lg-6">
                </div>
                <div class="col-lg-6" style="text-align:left;">
                    <a href="@Url.Content("~/admin/ProductList")" class="btn btn-default m-btn m-btn--custom m-btn--icon">
                        <span>
                            <i class="fa fa-list"></i>
                            <span>
                                برگشت به لیست
                            </span>
                        </span>
                    </a>
                    <a href="@Url.Content("~/admin/Product")" class="btn btn-info m-btn m-btn--custom m-btn--icon">
                        <span>
                            <i class="fa fa-plus"></i>
                            <span>
                                جدید
                            </span>
                        </span>
                    </a>
                    <button type="submit" class="btn btn-success m-btn m-btn--custom m-btn--icon" onclick="saveProducts();">
                        <span>
                            <i class="fa fa-calendar-check-o"></i>
                            <span>
                                ذخیره
                            </span>
                        </span>
                    </button>

                </div>
            </div>
        </div>

        <div class="card-body">
            <div class="form-group row">
                <div class="col-lg-6">
                    <label>
                        عنوان :
                    </label>
                    @Html.TextBoxFor(a => a.Title, new { @class = "form-control" })
                    @Html.ValidationMessageFor(a => a.Title)
                </div>
                <div class="col-lg-3">
                    <label>
                        دسته بندی :
                    </label>
                    <div class="k-content">
                        @(Html.Kendo().DropDownList()
.Name("CategoryId")
.DataTextField("title")
.DataValueField("id")
.DataSource(source =>
{
source.Read(read => { read.Action("GetCategories", "Repo"); });
})
.HtmlAttributes(new { style = "width: 100%" })
                        )
                    </div>
                </div>
                <div class="col-lg-3">
                    <label>
                        برند :
                    </label>
                    <div class="k-content">
                        @(Html.Kendo().DropDownList()
.Name("BrandId")
.DataTextField("name")
.DataValueField("id")
.DataSource(source =>
{
source.Read(read => { read.Action("GetBrands", "Repo"); });
})
.HtmlAttributes(new { style = "width: 100%" })
                        )
                    </div>
                </div>
            </div>
            <div class="form-group row">
                <div class="col-lg-12">
                    <label>
                        توضیحات :
                    </label>
                    @Html.TextBoxFor(a => a.Description, new { @class = "form-control" })
                    @Html.ValidationMessageFor(a => a.Description)
                </div>
            </div>
            <div class="form-group row">
                <div class="col-lg-12">
                    <div id="characteristicsGrid"></div>
                    <input type="hidden" name="characteristicsJson" id="characteristicsJson"/>
                </div>
            </div>

            @*<div class="form-group m-form__group row">
                    @for (int i = 1; i <= 4; i++)
                    {
                        @Html.HiddenFor(a => a.QuestionItem[i - 1].QuestionId)
                        @Html.HiddenFor(a => a.QuestionItem[i - 1].QuestionItemId)
                        @Html.HiddenFor(a => a.QuestionItem[i - 1].IsCorrect)


                        <div class="col-lg-6">
                            <div class="col-lg-12">
                                <br />
                                <label class="m-radio">
                                    پاسخ صحیح :
                                    گزینه @i
                                    <input type="radio" name="IsCorrect" id="@(Model.QuestionItem[i - 1].IsCorrect)" value="@i" @(Model.Question != null ? (Model.QuestionItem[i - 1].IsCorrect ? "checked" : "") : "checked")>

                                    <span></span>
                                </label>
                                <div>
                                    @Html.TextBoxFor(a => a.QuestionItem[i - 1].Title, new { @class = "form-control m-input m-input--solid " })
                                    @Html.ValidationMessageFor(a => a.QuestionItem[i - 1].Title)

                                </div>

                            </div>
                        </div>

                    }
                </div>*@
        </div>
        <br />
    }
</div>

<script>

    var characteristicsDataSource;

    $(function () {

        var pChars = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.Characteristics));
        var cChars = !pChars ? [] : pChars.map(function (c) {
            var o = {};
            o.Name = c.Name;
            for (var i = 0; i < c.Values.length; i++) {
                o['Value' + i] = c.Values[i];
            }
            for (var i = c.Values.length; i < 10; i++) {
                o['Value' + i] = null;
            }
            return o;
        });

        characteristicsDataSource =
            new kendo.data.DataSource({
                data: cChars,
                pageSize: 10
            });

        $("#characteristicsGrid").kendoGrid({
            dataSource: characteristicsDataSource,
            columns: [
                { field: "Name", title: "نام خصوصیت" },
                { field: "Value0", title: "مقدار 1" },
                { field: "Value1", title: "مقدار 2" },
                { field: "Value2", title: "مقدار 3" },
                { field: "Value3", title: "مقدار 4" },
                { field: "Value4", title: "مقدار 5" },
                { field: "Value5", title: "مقدار 6" },
                { field: "Value6", title: "مقدار 7" },
                { field: "Value7", title: "مقدار 8" },
                { field: "Value8", title: "مقدار 9" },
                { field: "Value9", title: "مقدار 10" },
                { command: ["edit", "destroy"] }
            ],
            toolbar: ["create"],
            scrollable: false,
            pageable: true,
            sortable: true,
            groupable: true,
            //filterable: true,
            editable: "inline",
            save: function () {
                this.refresh();
            }
        });
    });

    function saveProducts() {
        var cChars = characteristicsDataSource.data();
        var pChars = cChars.map(function (c) {
            var o = {
                Name: c.Name,
                Values: []
            };

            for (var i = 0; i < 10; i++) {
                var v = c["Value" + i];
                if (v == null || v == '')
                    break;
                o.Values[i] = v;
            }
            return o;
        });
        $("#characteristicsJson").val(JSON.stringify(pChars));
    }
</script>

