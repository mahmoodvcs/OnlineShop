@using Kendo.Mvc.UI
@{
    ViewData["Title"] = "تگ ها";
    Layout = "~/Views/Shared/_Staff.cshtml";
}


@(Html.Kendo().Grid<MahtaKala.Entities.Tag>()
	.Name("Grid")
	.Columns(columns =>
	{
		columns.Bound(p => p.Name);
		columns.Bound(p => p.Order);
		columns.Command(command => {
			command.Edit().Text("ویرایش");
			command.Destroy().Text("حذف");
		}).Width(200);
	})
	.ToolBar(toolbar =>
	{
		toolbar.Create().Text("جدید");
	})
	.HtmlAttributes(new { style = "height: 550px;" })
	.Scrollable()
	.Sortable()
	.Filterable()
	.Editable(GridEditMode.InLine)
	.Pageable(pageable => pageable
		.Refresh(true)
		.PageSizes(true)
		.PageSizes(new int[] { 5, 10, 20, 50 })
		.ButtonCount(5)
	).DataSource(dataSource => dataSource
		.Ajax()
		.Model(model =>
		{
			model.Id(p => p.Id);
		})
		.Read(read => read.Action("GetAllTags", "Staff"))
		.Update(up => up.Action("UpdateTag", "Staff"))
		.Destroy(de => de.Action("RemoveTag", "Staff"))
		.Create(de => de.Action("CreateTag", "Staff"))
		.PageSize(20)
		.Events(events =>
		{
			events.Error("error_handler");
			events.RequestEnd("force_update");
		})
	)
	
)

<script type="text/javascript">

	function error_handler(e) {
		if (e.status === "error" ||
			(e.xhr != undefined && e.xhr.responseJSON != undefined && e.xhr.responseJSON.success != undefined &&
				e.xhr.responseJSON.success === false)) {
            //var message = "Errors:\n";
            //$.each(e.errors, function (key, value) {
            //    if ('errors' in value) {
            //        $.each(value.errors, function () {
            //            message += this + "\n";
            //        });
            //    }
            //});
			if (e.xhr.responseJSON == undefined) {
				if (e.errorThrown != undefined) {
					alert(e.errorThrown);
				}
				else {
					alert("خطا در انجام عملیات! لطفاً دوباره تلاش کنید.");
				}
			}
			else if (e.xhr.responseJSON.code == 400) {
				alert(e.xhr.responseJSON.message);
			}
			else {
				alert("خطا! Error Code: " + e.xhr.responseJSON.code + " - Error Message: " + e.xhr.responseJSON.message);
			}
        }
	}

	function force_update(e) {
		if (e.type === "create") {
			var dataSource = this;
			dataSource.read();
		}
	}
</script>