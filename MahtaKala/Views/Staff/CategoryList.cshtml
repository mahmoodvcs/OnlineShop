@using Kendo.Mvc.UI
@{
    ViewData["Title"] = "دسته بندی کالا";
    Layout = "~/Views/Shared/_Staff.cshtml";
}

<div class="filterPanel">
    <fieldset>
        <legend>فیلتر ها:</legend>
        <div class="row">
            <div class="col-lg-3">
                <label>نام:</label>
                <input type="text" name="nameFilter" class="form-control additionalData" />
            </div>
            <div class="col-lg-3">
				<label>دسته ی والد:</label>
                <input type="text" name="categoryFilter" class="form-control additionalData" />
            </div>
            <div class="col-lg-3">
                <label>غیرفعال:</label>
                <select id="disabledFilter" name="disabledFilter" class="form-control additionalData">
                    <option value="false">فعال</option>
                    <option value="true">غیرفعال</option>
                    <option value="all" selected>همه</option>
                </select>
                @*<input type="hidden" name="disabledFilter" id="disabledFilter" class="form-control additionalData" />*@
            </div>
            <div class="col-lg-3">
                <label>منتشر شده:</label>
                <select id="publishedFilter" name="publishedFilter" class="form-control additionalData">
                    <option value="true">منتشر شده</option>
                    <option value="false">منتشر نشده</option>
                    <option value="all" selected>همه</option>
                </select>
                @*<input type="hidden" name="publishedFilter" id="publishedFilter" class="form-control additionalData" />*@
            </div>
        </div>
    </fieldset>
</div>

@*<script type="text/javascript">
    function disabledFilterChanged(disabledFilterSelect) {
        document.getElementById("disabledFilter").value = disabledFilterSelect.value;
    }

    function publishedFilterChanged(publishedFilterSelect) {
        document.getElementById("publishedFilter").value = publishedFilterSelect.value;
    }
</script>*@


@(Html.Kendo().Grid<MahtaKala.Entities.Category>()
    .Name("Grid")
    .Columns(columns =>
    {
        columns.Bound(p => p.Title);
        columns.Bound(p=>p.Parent).ClientTemplate("#=Parent!=null?Parent.Title:''#");
        columns.Bound(p => p.Order).Width(80);
        columns.Bound(p => p.Disabled).Width(80).ClientTemplate("#=Disabled?'بلی':'خیر'#");
        columns.Bound(p => p.Published).Width(80).ClientTemplate("#=Published?'بلی':'خیر'#");
        columns.Bound(p => p.Id).Width(80)
            .ClientTemplate("<a href='##' onclick='moveUp(#=Id#)'><span class='k-icon k-i-sort-asc-sm'></span></a>" +
                            "<a href='##' onclick='moveDown(#=Id#)'><span class='k-icon k-i-sort-desc-sm'></span></a>")
            .Title("ترتیب");
        columns.Command(command => command.Custom("Edit").Text("ویرایش").Click("editEntity")).Width(87);
        columns.Command(command => command.Custom("حذف").Click("RemoveEntity")).Width(74);
    })
    .ToolBar(toolbar =>
    {
        toolbar.ClientTemplateId("GridToolbarTemplate");
    })
    .HtmlAttributes(new { style = "height: 550px;" })
    .Scrollable()
    .Groupable()
    .Sortable()
    //.Filterable()
    .Pageable(pageable => pageable
        .Refresh(true)
        .PageSizes(true)
        .PageSizes(new int[] { 5, 10, 20, 50 })
        .ButtonCount(5))
    .DataSource(dataSource => dataSource
        .Ajax()
        .Model(model =>
        {
            model.Id(p => p.Id);
        })
        .Read(read => read.Action("GetAllCategories", "Staff").Data("getAdditionalData"))
        .PageSize(20)
    )
)


<script id="GridToolbarTemplate" type="text/x-kendo-template">
    <div class="refreshBtnContainer">
        <a href="##" onclick="window.open('@Url.Content("~/Staff/Category")'); return false;" class="k-pager-refresh k-link k-button">
            <span class="k-icon k-i-add"></span>
            جدید
        </a>
    </div>
</script>

<script>
    function editEntity(e) {
        e.preventDefault();
        window.open(
            '/Staff/Category/' + this.dataItem($(e.currentTarget).closest("tr")).Id,
            '_blank'
        );
    }


    function RemoveEntity(e) {
        e.preventDefault();
        var id = this.dataItem($(e.currentTarget).closest("tr")).Id;
        swal.fire({
            title: "از حذف این آیتم مطمئن هستید؟",
            text: "در صورتی که برای این آیتم رکوردی درج شده باشد حذف می شود و این کار غیر قابل بازگشت می باشد",
            type: "warning",
            showCancelButton: true,
            confirmButtonColor: "#DD6B55",
            confirmButtonText: "بلی مطمئنم",
            cancelButtonText: "انصراف می دم",
            closeOnConfirm: false,
            closeOnCancel: true
        }).then(function (result) {
            if (result.value) {
                    $.ajax({
                        url: '@Url.Content("~/Staff/Category_Destroy/")' + id,
                        dataType: "json",
                        type: "POST",
                        contentType: 'application/json; charset=utf-8',
                        cache: false,
                        success: function (data) {

                            if (data.success) {
                                var grid = $("#Grid").data("kendoGrid");
                                grid.dataSource.read();
                                swal.fire("حذف رکورد با موفقیت انجام شد", "", "success");
                            }
                            else {
                                swal.fire(data.message, "", "warning");
                            }
                        },
                        error: function (xhr) {
                            swal.fire("خطایی  در حذف اطلاعات اتفاق افتاده است", "", "warning");
                        }
                    });
                }
            });
    }

    function moveUp(id) {
        window.event.preventDefault();
        $.ajax({
            url: '@Url.Content("~/Staff/Category_Up/")' + id,
            dataType: "json",
            type: "POST",
            contentType: 'application/json; charset=utf-8',
            cache: false,
            success: function (data) {

                if (data.success) {
                    var grid = $("#Grid").data("kendoGrid");
                    grid.dataSource.read();
                }
                else {
                    swal.fire(data.message, "", "warning");
                }
            },
            error: function (xhr) {
                swal.fire("خطایی اتفاق افتاده است", "", "warning");
            }
        });
    }

    function moveDown(id) {
        window.event.preventDefault();
        $.ajax({
            url: '@Url.Content("~/Staff/Category_Down/")' + id,
            dataType: "json",
            type: "POST",
            contentType: 'application/json; charset=utf-8',
            cache: false,
            success: function (data) {

                if (data.success) {
                    var grid = $("#Grid").data("kendoGrid");
                    grid.dataSource.read();
                }
                else {
                    swal.fire(data.message, "", "warning");
                }
            },
            error: function (xhr) {
                swal.fire("خطایی اتفاق افتاده است", "", "warning");
            }
        });
    }
</script>
