@{
    ViewData["Title"] = ViewData["Title"];
    Layout = "~/Views/Shared/_Staff.cshtml";
}
<div class="filterPanel">
    <fieldset>
        <legend>فیلتر ها:</legend>
        <div class="row">
            <div class="col-lg-3">
                <label>وضعیت</label>
                @(Html.EnumCombo<OrderState>("stateFilter", showDefaultValue: true, isGridAdditionalData: true))
            </div>
        </div>
    </fieldset>

</div>
@{ 
	var currentUserObject = Context.Items["User"];
	User currentUser = null;
	if (currentUserObject != null && currentUserObject is User)
	{
		currentUser = (User)currentUserObject;
	}
	else
	{
		throw new Exception("unauthorized staff! Action denied!");
	}
}

@(Html.Kendo().Grid<MahtaKala.Models.OrderModel>().Name("grid").Columns(columns =>
{
	columns.Bound(p => p.FirstName).Title("نام");
	columns.Bound(p => p.LastName).Title("نام خانوادگی");
	columns.Bound(p => p.CheckoutDate).Title("تاریخ سفارش");
	columns.Bound(p => p.State).Title("وضعیت").Filterable(false);//.Filterable(fc=> { fc.UI("dateFilter"); });
	columns.Bound(p => p.ApproximateDeliveryDate).Title("تاریخ تقریبی تحویل");
	columns.Bound(p => p.SendDate).Title("تاریخ ارسال");
	columns.Bound(p => p.ActualDeliveryDate).Title("تاریخ تحویل");
	columns.Bound(p => p.Price).Title("قیمت");
	columns.Command(command => command.Custom("جزئیات").Click("viewDetails")).Width(90);
	//columns.Command(command => command.Custom("تایید ارسال").Click("ConfirmSent")).Width(90);

	if (currentUser.Type == UserType.Admin)
	{
		columns.Bound(p => p.DeliveryTrackNo).Title("کد تحویل");
		columns.Command(command => command.Custom("تایید تحویل").Click("ConfirmDelivered")).Width(90);
	}

})
	.Scrollable()
	.Filterable(c=>
	{
		//c.Mode(GridFilterMode.Row).Operators(oc=> { oc.ForString(sc=> { sc.Contains()})});
	})
	.Sortable()
	.Pageable(pageable => pageable
		.Refresh(true)
		.PageSizes(true)
		.PageSizes(new int[] { 5, 10, 20, 50 })
		.ButtonCount(5))
	.Sortable()
	.DataSource(dataSource => dataSource
			.Ajax()
			.PageSize(50)
			.Model(model =>
			{
				model.Id(p => p.Id);

			})
			.Read(read => read.Action("GetBuyHistory", "Staff").Data("getAdditionalData"))
			.Sort(sc=>sc.Add(a=>a.CheckoutDate).Descending())
																																																																				)
    )
@section js{
    <script type="text/javascript">
        @*function ConfirmSent(e) {
            e.preventDefault();
            var dataItem = this.dataItem($(e.currentTarget).closest("tr"));
            Swal.fire({
                title: "دریافت شماره ی پیک",
                text: "شماره ی پیک را وارد نمایید",
                input: 'text',
                showCancelButton: true,
                inputPlaceholder: "شماره ی پیک",
                preConfirm: (value) => {
                    if (value === false || value === "")
                        Swal.showValidationMessage("شماره ی پیک را وارد نمایید")
                },
            }).then((result) => {
                if (result.value) {
                    $.post("@Url.Action("ConfirmSent", "Staff")",
                        {
                            Id: dataItem.Id,
                            delivererId: result.value
                        },
                        function (response) {
                            if (response.success) {
                                location.reload();
                            } else {
                                ShowError(response.message);
                            }
                        })
                        .fail(function (response) {
                            ShowError(response.responseText);
                        });
                }
            });
        }*@

        function ConfirmDelivered(e) {
            e.preventDefault();
            var dataItem = this.dataItem($(e.currentTarget).closest("tr"));
            Swal.fire({
                title: "دریافت شماره ی پیگیری",
                text: "شماره ی پیگیری را وارد نمایید",
                input: 'text',
                showCancelButton: true,
                inputPlaceholder: "شماره ی پیگیری",
                preConfirm: (value) => {
                    if (value === false || value === "")
                        Swal.showValidationMessage("شماره ی پیگیری را وارد نمایید")
                },
            }).then((result) => {
                if (result.value) {
                    $.post("@Url.Action("ShareOrderPayment", "Staff")",
                        {
                            Id: dataItem.Id,
                            TrackNo: result.value
                        },
                        function (response) {
                            if (response.success) {
                                location.reload();
                            } else {
                                ShowError(response.message);
                            }
                        })
                        .fail(function (response) {
                            ShowError(response.responseText);
                        });
                }
            });
        }

        function ShowError(message) {

            Swal.fire({
                icon: 'error',
                title: 'خطا',
                text: message
            });
        }


        function viewDetails(e) {
            e.preventDefault();
            var dataItem = this.dataItem($(e.currentTarget).closest("tr"));
            window.open("@Url.Action("OrderDetails","Orders")?id=" + dataItem.Id);

        }

    </script>
}
