@using MahtaKala.Models.StaffModels;

@{
	Layout = "~/Views/Shared/_Staff.cshtml";
	ViewBag.Title = "اسکاد - کالاهای قابل سفارش";
}

<link href="~/css/toastr.css" rel="stylesheet" />

@(Html.Kendo().Grid<MahtaKala.Entities.EskaadEntities.Merchandise>()
	.Name("MerchandiseGrid")
	.Columns(cols =>
	{
		cols.Bound(x => x.Code).Title("کد");
		cols.Bound(x => x.Name).Title("نام");
		cols.Bound(x => x.Unit).Title("واحد");
		cols.Bound(x => x.Count).Title("موجودی اسکاد");
		cols.Bound(x => x.Active).Title("فعال").ClientTemplate("#=Active == 1 ?'بلی':'خیر'#");
		cols.Bound(x => x.Price).Title("قیمت");
		cols.Command(x => x.Custom("سفارش").Click("AddOrderDraft")).Width(90);
	}).Pageable(pageable => pageable
		.Refresh(true)
		.PageSizes(true)
		.PageSizes(new int[] { 5, 10, 20, 50 })
		.ButtonCount(5))
	.Sortable()
	.DataSource(datasource =>
		datasource.Ajax()
		.PageSize(20)
		.Model(model =>
		{
			model.Id(p => p.Id);
		})
		.Read(read => read.Action("GetEskaadMerchandiseDataSource", "BusinessDept")))
)

<br />
<br />
@(Html.Kendo().Grid<MahtaKala.Entities.EskaadOrderDraft>()
		.Name("OrderDraftGrid")
		.Columns(cols =>
		{
			cols.Bound(x => x.EskaadCode).Title("کد");
			cols.Bound(x => x.Quantity).Title("تعداد سفارش");
			cols.Bound(x => x.CreatedDatePersian).Title("روز ثبت");
			cols.Bound(x => x.CreatedBy.Username).Title("ساخته شده توسط");
			cols.Bound(x => x.OrderIsSealed).Title("نهایی شده").ClientTemplate("#= OrderIsSealed ? 'بلی' : 'خیر' #").Width(110);
			cols.Command(x => x.Custom("حذف").Click("RemoveOrderDraftItem")).Width(80);
		})
		.Pageable(pageable => pageable
			.Refresh(true)
			.PageSizes(true)
			.PageSizes(new int[] { 5, 10, 20, 50 })
			.ButtonCount(5))
		.Sortable()
		.DataSource(datasource =>
			datasource.Ajax()
			.PageSize(20)
			.Read(read => read.Action("GetOrderDraftDataSource", "BusinessDept")))
    )

<br />
<br />
<input type="button" onclick="PlaceOrdersForToday()" value="ارسال سفارش امروز برای اسکاد" class="btn btn-primary" />



<script src="~/js/toastr.min.js"></script>

@section js{
	<script type="text/javascript">
        function AddOrderDraft(e) {
            e.preventDefault();
            var dataItem = this.dataItem($(e.currentTarget).closest("tr"));
            Swal.fire({
                title: "تعداد مورد نیاز",
                text: "تعداد درخواستی برای سفارش خود را وارد نمایید:",
                input: 'number',
                showCancelButton: true,
                inputPlaceholder: "تعداد سفارش",
                preConfirm: (value) => {
                    if (value === false || value === "")
                        Swal.showValidationMessage("لطفاً تعداد درخواستی برای سفارش را وارد کنید.");
                    else if (isNaN(value))
                        Swal.showValidationMessage("تعداد درخواستی معتبر نیست!");
                    else if (!Number.isInteger(parseInt(value)))
                        Swal.showValidationMessage("لطفاً یک عدد صحیح وارد کنید.");
                },
            }).then((result) => {
                if (Number.isInteger(parseInt(result.value))) {
                    $.post("@Url.Action("AddNewOrderItem", "BusinessDept")",
                        {
                            merchandiseCode: dataItem.Code,
                            quantity: result.value
                        },
                        function (response) {
                            if (response.success) {
                                //location.reload();
								$("#OrderDraftGrid").data("kendoGrid").dataSource.read();
								toastr.success(response.message, '', { positionClass: "toast-bottom-left" });
                            } else {
                                ShowError(response.message);
                            }
                        })
                        .fail(function (response) {
                            ShowError(response.responseText);
                        });
                }
            });
		}

		function RemoveOrderDraftItem(e) {
			e.preventDefault();
			var dataItem = this.dataItem($(e.currentTarget).closest("tr"));
			swal.fire({
				title: "مطمئنید؟",
				text: "برای جلوگیری از حذف ناخواسته، لطفاً گزینه ی مناسب را انتخاب کرده و روی تأیید کلیک کنید.",
				type: "warning",
				html:
					'<div class="col-lg-2">' +
					'<select id="deleteOrderDraftItem_ddl" name="deleteOrderDraftItem_ddl">' +
					'<option value="retain">برگرد</option>' +
					'<option value="sure_to_delete">مطمئنم! حذفش کن!</option>' +
					'</select>' +
					'</div>',
				showCancelButton: true,
				confirmButtonColor: "#DD6B55",
				confirmButtonText: "تأیید",
				cancelButtonText: "ببخشید، اشتباه شد!",
				closeOnConfirm: false,
				closeOnCancel: true
			}).then(function (result) {
				var deleteOrderDraftItem_ddl = document.getElementById('deleteOrderDraftItem_ddl');
				if (result.isConfirmed && deleteOrderDraftItem_ddl.value === "sure_to_delete") {
					@*$.ajax({
						url: '@Url.Content("~/Staff/BusinessDept/DeleteOrderDraftItem/")' + dataItem.Id,
						type: "DELETE",
						contentType: 'application/x-www-form-urlencoded',
						cache: false,
						success: function (response) {
							if (response.success) {
								var draftGrid = $("#OrderDraftGrid").data("kendoGrid");
								draftGrid.dataSource.read();
								toastr.success(response.message, '', { positionClass: "toast-bottom-left" });
							}
							else {
								ShowError(response.message);
							}
						},
						error: function (response) {
							ShowError("خطا در حذف رکورد!" + response.status + " " + response.responseText);
						}
					});*@
					$.post("@Url.Action("DeleteOrderDraftItem", "BusinessDept")",
						{
							Id: dataItem.Id
						},
						function (response) {
							if (response.success) {
								var draftGrid = $("#OrderDraftGrid").data("kendoGrid");
								draftGrid.dataSource.read();
								toastr.success(response.message, '', { positionClass: "toast-bottom-left" });
							}
							else {
								ShowError(response.message);
							}
							return;
						})
						.fail(function (response) {
							ShowError("خطا در حذف رکورد!" + response.status + " " + response.responseText);
							return;
						});
				}
			});

		}

		function PlaceOrdersForToday() {
			var alreadyOrderedToday = true;
			$.get("@Url.Action("EskaadOrdersAlreadyPlacedForToday", "BusinessDept")",
				function (response) {
					alreadyOrderedToday = response.alreadyDoneToday;
					if (alreadyOrderedToday) {
						//location.reload();
						ShowError("سفارش امروز برای اسکاد قبلاً ثبت شده است!");
						return;
					}
					else {
						ClearToPlaceOrders();
					}
				})
				.fail(function (response) {
					ShowError(response.responseText);
					return;
				});
		}
		function ClearToPlaceOrders() {
			$.post("@Url.Action("PlaceEskaadOrdersForToday", "BusinessDept")",
				function (response) {
					if (response.success) {
						Swal.fire({
							icon: 'success',
							title: 'عملیات موفق',
							text: response.message
						});
						location.reload();
						return;
					}
					else {
						ShowError(response.message);
						return;
					}
				})
				.fail(function (response) {
					ShowError(response.responseText);
					return;
				});
		}


		function ShowError(message) {
			Swal.fire({
				icon: 'error',
				title: 'خطا',
				text: message
			});
		}

	</script>
}
